{"version":3,"sources":["contexts/MoviesProvider.jsx","components/ImageLoader.jsx","components/MovieCard.jsx","components/Paginator.jsx","components/MovieList.jsx","components/Header.jsx","components/Modal.jsx","hooks/detectClickOutside.jsx","components/App.jsx","index.js"],"names":["MoviesContext","React","createContext","Api","process","ApiKey","useMovies","useContext","MoviesProvider","children","useState","movies","setMovies","movieDetail","setMovieDetail","nbResults","setNbResults","currentTitle","setCurrentTitle","currentPage","setCurrentPage","getMovieRequest","a","url","fetch","response","json","responseJson","Search","totalResults","searchMovie","title","paginateSearchMovie","page","searcMovieById","id","useEffect","value","Provider","ImageLoader","poster","alt","imageLoaded","setImageLoaded","isValidSrc","setIsValidSrc","className","src","onLoad","onError","MovieCard","movie","openModal","onClick","content","open","Poster","Title","Paginator","paginating","e","MovieList","map","index","Header","onChange","target","onKeyPress","key","preventDefault","type","placeholder","Modal","modal","handleClose","modalLoaded","setModalLoaded","modalRef","useRef","ref","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","getElementsByClassName","onwheel","DetectClickOutside","imdbID","Country","Genre","Director","Writer","Language","Released","Runtime","Plot","Awards","Actors","Ratings","rate","Source","Value","App","setModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de3ab995.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\n\r\nconst MoviesContext = React.createContext();\r\nconst Api = process.env.REACT_APP_OMDB_API;\r\nconst ApiKey = process.env.REACT_APP_OMDB_API_KEY;\r\n\r\nexport function useMovies(){\r\n    return useContext(MoviesContext)\r\n}\r\n\r\nexport function MoviesProvider({children}) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [movieDetail, setMovieDetail] = useState([])\r\n    const [nbResults, setNbResults ] = useState('');\r\n    const [currentTitle, setCurrentTitle] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    const getMovieRequest = async() =>{\r\n        if(currentTitle){\r\n            const url = \r\n            `${Api}?s=${currentTitle}&type=movie&apikey=${ApiKey}`\r\n            const response = await fetch(url);\r\n            const responseJson = await response.json()\r\n            if(responseJson.Search){\r\n                setMovies(responseJson.Search)\r\n                setNbResults(responseJson.totalResults)\r\n            }\r\n        }\r\n    }\r\n\r\n    const searchMovie = async(title) => {\r\n        setMovies([])\r\n        setCurrentTitle(title)\r\n        const url = `${Api}?s=${title}&type=movie&apikey=${ApiKey}`\r\n        const response = await fetch(url);\r\n        const responseJson = await response.json()\r\n\r\n        if(responseJson.Search){\r\n            setMovies(responseJson.Search)\r\n            setNbResults(responseJson.totalResults)\r\n            // console.log(responseJson.Search)\r\n        }\r\n    }\r\n    const paginateSearchMovie = async(page) =>{\r\n        setMovies([])\r\n        setCurrentPage(page)\r\n        const url = `${Api}?s=${currentTitle}&page=${page}&type=movie&apikey=${ApiKey}`\r\n        const response = await fetch(url);\r\n        const responseJson = await response.json()\r\n        if(responseJson.Search){\r\n            setMovies(responseJson.Search)\r\n            setNbResults(responseJson.totalResults)\r\n        }\r\n    }\r\n\r\n    const searcMovieById = async(id) =>{\r\n        const url = `${Api}?i=${id}&type=movie&apikey=${ApiKey}`\r\n        const response = await fetch(url);\r\n        const responseJson = await response.json()\r\n        if(responseJson){\r\n            setMovieDetail(responseJson)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMovieRequest()\r\n    }, [])\r\n\r\n    const value = {\r\n        movies,\r\n        nbResults,\r\n        searchMovie,\r\n        paginateSearchMovie,\r\n        currentPage,\r\n        currentTitle,\r\n        searcMovieById,\r\n        movieDetail\r\n    }\r\n    return (\r\n        <MoviesContext.Provider value={value}>\r\n            {children}\r\n        </MoviesContext.Provider>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function ImageLoader({poster, alt}) {\r\n    const [imageLoaded, setImageLoaded] = useState(false);\r\n    const [isValidSrc, setIsValidSrc] = useState(!!poster);\r\n    return (\r\n        <>\r\n            {\r\n                isValidSrc ? (\r\n                    <img\r\n                        className={\r\n                            `smooth-image \r\n                    image-${imageLoaded ? 'visible' : 'hidden'}`\r\n                        }\r\n                        src={poster}\r\n                        alt={alt}\r\n                        onLoad={() => setImageLoaded(true)}\r\n                        onError={() => setIsValidSrc(false)}\r\n                    />\r\n                ) : (\r\n                        <div className=\"smooth-no-image\">IMAGE NOT FOUND</div>\r\n                    )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import './MovieCard.css'\r\nimport React, { useEffect, useState } from 'react'\r\nimport ImageLoader from './ImageLoader';\r\n\r\nexport default function MovieCard({ movie, openModal }) {\r\n    return (\r\n        <li onClick={()=> openModal({content: movie, open: true})} className={`image-container ${movie ? null : 'loading'}`}>\r\n            {/* <div className=\"icon-container\"><i className=\"fav-icon\" /></div> */}\r\n            <ImageLoader poster={movie.Poster} alt={movie.Title}/>\r\n            <div className=\"title-container\"><span>{movie.Title}</span></div>\r\n            \r\n        </li>\r\n    )\r\n}\r\n","import './Paginator.css'\r\nimport React, { useState } from 'react'\r\nimport { useMovies } from '../contexts/MoviesProvider'\r\n\r\nexport default function Paginator() {\r\n    const { nbResults, paginateSearchMovie, currentPage } = useMovies()\r\n    function paginating(page) {\r\n        if (page == 'next') {\r\n            paginateSearchMovie(currentPage + 1)\r\n        } else {\r\n            if (currentPage >= 1) {\r\n                paginateSearchMovie(currentPage - 1)\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"paginator\">\r\n            <button onClick={e => paginating('back')}>←</button>\r\n            <span>{currentPage * 10 - 9} - {currentPage * 10}  of {nbResults} </span>\r\n            <button onClick={e => paginating('next')}>→</button>\r\n        </div>\r\n    )\r\n}\r\n","import './MovieList.css'\r\nimport React from 'react'\r\nimport { useMovies } from '../contexts/MoviesProvider';\r\nimport MovieCard from './MovieCard';\r\nimport Paginator from './Paginator';\r\n\r\nexport default function MovieList({ openModal }) {\r\n    const { movies, currentTitle } = useMovies();\r\n    return (\r\n        <div className={currentTitle ? 'movielist-container' : 'hide'}>\r\n            <div className=\"top-bar\">\r\n                <h3>Results for {currentTitle}</h3>\r\n                <Paginator />\r\n            </div>\r\n            <ul className=\"movielist\">\r\n                {\r\n                    movies[0]? (\r\n                        movies.map((movie, index) => {\r\n                            return (\r\n                                <MovieCard openModal={openModal} movie={movie} key={index} />\r\n                            )\r\n                        })\r\n                    ):(\r\n                        <span>No Results</span>\r\n                    )\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import './Header.css'\r\nimport React, { useState } from 'react'\r\nimport { useMovies } from '../contexts/MoviesProvider'\r\n\r\nexport default function Header() {\r\n    const {searchMovie, currentTitle} = useMovies()\r\n    return (\r\n        <header className={currentTitle? 'header': 'header full-view'}>\r\n            <h2>Movie Searcher</h2>\r\n            <form>\r\n                <input \r\n                onChange={e => searchMovie(e.target.value)}\r\n                onKeyPress={e => {\r\n                    if(e.key == 'Enter'){\r\n                        e.preventDefault()\r\n                    }\r\n                }}\r\n                type=\"text\" \r\n                placeholder=\"Enter a name to search...\"/>\r\n            </form>\r\n        </header>\r\n    )\r\n}\r\n","import './Modal.css';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useMovies } from '../contexts/MoviesProvider';\r\nimport DetectClickOutside from '../hooks/detectClickOutside';\r\nimport ImageLoader from './ImageLoader';\r\n\r\nexport default function Modal({ modal, handleClose }) {\r\n    const { searcMovieById, movieDetail } = useMovies()\r\n    const [modalLoaded, setModalLoaded] = useState(false)\r\n    const modalRef = useRef()\r\n    DetectClickOutside(modalRef, handleClose)\r\n    useEffect(() => {\r\n        searcMovieById(modal.content.imdbID)\r\n    }, [])\r\n    return (\r\n        <div className=\"overlay\">\r\n            {\r\n                movieDetail.Title ?\r\n                    (\r\n                        <div onLoad={() => setModalLoaded(true)} ref={modalRef} className={`modal ${modalLoaded ? 'modal-open' : 'modal-not-open'}`}>\r\n                            <span onClick={() => handleClose({content: {}, open: false})} className=\"close-button\">←</span>\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"sidebar\">\r\n                                    <div className=\"image-container\">\r\n                                        <ImageLoader poster={movieDetail.Poster} alt={movieDetail.Title} />\r\n                                    </div>\r\n                                    <div className=\"movie-details\">\r\n                                        <p><b>Country:</b>  {movieDetail.Country}</p>\r\n                                        <p><b>Genre:</b>  {movieDetail.Genre}</p>\r\n                                        <p><b>Director:</b>  {movieDetail.Director}</p>\r\n                                        <p><b>Writer:</b>  {movieDetail.Writer}</p>\r\n                                        <p><b>Language:</b>  {movieDetail.Language}</p>\r\n                                        <p><b>Released:</b>  {movieDetail.Released}</p>\r\n                                        <p><b>Runtime:</b>  {movieDetail.Runtime}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"main\">\r\n                                    <h3>{movieDetail.Title}</h3>\r\n                                    <p><b>Synopis: </b>{movieDetail.Plot}</p>\r\n                                    <p><b>Awards: </b>{movieDetail.Awards}</p>\r\n                                    <p><b>Actors: </b>{movieDetail.Actors}</p>\r\n                                    {movieDetail.Ratings ?\r\n                                        movieDetail.Ratings.map((rate, index) => {\r\n                                            return (\r\n                                                <p key={index}><b>{rate.Source}: </b>{rate.Value}</p>\r\n                                            )\r\n                                        }) :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    ) :\r\n                    <div className=\"spinner\"></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nexport default function DetectClickOutside(ref, handleClose) {\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                handleClose({ content: {}, open: false })\r\n            }\r\n        }\r\n        const stopWheel = (event) => {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                event.preventDefault()\r\n            }\r\n        }\r\n        document.addEventListener('mousedown', handleClickOutside)\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n            document.getElementsByClassName('app').onwheel = () =>{ return true}\r\n        }\r\n    }, [ref])\r\n}","import './App.css';\r\nimport MovieList from './MovieList';\r\nimport { MoviesProvider } from '../contexts/MoviesProvider';\r\nimport Header from './Header';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Modal from './Modal'\r\n\r\nfunction App() {\r\n  const [modal, setModal] = useState({ content: {}, open: false })\r\n  return (\r\n    <div className=\"app\">\r\n      <MoviesProvider>\r\n        <Header />\r\n        <MovieList openModal={setModal} />\r\n        {modal.open ? <Modal modal={modal} handleClose={setModal} /> : null}\r\n      </MoviesProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}